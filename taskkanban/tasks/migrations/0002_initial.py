# Generated by Django 5.2.3 on 2025-06-22 01:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("boards", "0002_initial"),
        ("tasks", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="subtask",
            name="assignee",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_subtasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="分配给",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="board",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="boards.board",
                verbose_name="所属看板",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="board_list",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="boards.boardlist",
                verbose_name="所属列表",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="completed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="completed_tasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="完成人",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_tasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="labels",
            field=models.ManyToManyField(
                blank=True,
                related_name="tasks",
                to="boards.boardlabel",
                verbose_name="标签",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="reporter",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reported_tasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="报告人",
            ),
        ),
        migrations.AddField(
            model_name="subtask",
            name="parent_task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="subtasks",
                to="tasks.task",
                verbose_name="父任务",
            ),
        ),
        migrations.AddField(
            model_name="taskassignment",
            name="assigned_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_task_assignments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="分配人",
            ),
        ),
        migrations.AddField(
            model_name="taskassignment",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assignments",
                to="tasks.task",
                verbose_name="任务",
            ),
        ),
        migrations.AddField(
            model_name="taskassignment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="task_assignments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="assignees",
            field=models.ManyToManyField(
                blank=True,
                related_name="assigned_tasks",
                through="tasks.TaskAssignment",
                through_fields=("task", "user"),
                to=settings.AUTH_USER_MODEL,
                verbose_name="分配给",
            ),
        ),
        migrations.AddField(
            model_name="taskattachment",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                to="tasks.task",
                verbose_name="任务",
            ),
        ),
        migrations.AddField(
            model_name="taskattachment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="uploaded_attachments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="上传用户",
            ),
        ),
        migrations.AddField(
            model_name="taskcomment",
            name="mentioned_users",
            field=models.ManyToManyField(
                blank=True,
                related_name="mentioned_in_comments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="提及用户",
            ),
        ),
        migrations.AddField(
            model_name="taskcomment",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="replies",
                to="tasks.taskcomment",
                verbose_name="父评论",
            ),
        ),
        migrations.AddField(
            model_name="taskcomment",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="tasks.task",
                verbose_name="任务",
            ),
        ),
        migrations.AddField(
            model_name="taskcomment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="task_comments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="评论用户",
            ),
        ),
        migrations.AddField(
            model_name="taskdependency",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_dependencies",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建人",
            ),
        ),
        migrations.AddField(
            model_name="taskdependency",
            name="from_task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dependencies_from",
                to="tasks.task",
                verbose_name="源任务",
            ),
        ),
        migrations.AddField(
            model_name="taskdependency",
            name="to_task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dependencies_to",
                to="tasks.task",
                verbose_name="目标任务",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="taskassignment",
            unique_together={("task", "user")},
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["board", "board_list", "position"],
                name="tasks_task_board_i_77d6ec_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["creator", "-created_at"], name="tasks_task_creator_af074c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["due_date"], name="tasks_task_due_dat_bce847_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["status", "-updated_at"], name="tasks_task_status_da2428_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskattachment",
            index=models.Index(
                fields=["task", "-created_at"], name="tasks_attac_task_id_8fb761_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskattachment",
            index=models.Index(
                fields=["user", "-created_at"], name="tasks_attac_user_id_0cb858_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskcomment",
            index=models.Index(
                fields=["task", "created_at"], name="tasks_comme_task_id_860403_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskcomment",
            index=models.Index(
                fields=["user", "-created_at"], name="tasks_comme_user_id_bea065_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="taskdependency",
            unique_together={("from_task", "to_task", "dependency_type")},
        ),
    ]
